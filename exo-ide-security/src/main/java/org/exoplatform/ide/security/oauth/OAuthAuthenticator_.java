/*
 * Copyright (C) 2012 eXo Platform SAS.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.exoplatform.ide.security.oauth;

import java.io.IOException;

/**
 * Authentication service which allow get access token from OAuth provider site.
 *
 * @author <a href="mailto:vzhukovskii@exoplatform.com">Vladyslav Zhukovskii</a>
 * @version $Id: $
 */
public interface OAuthAuthenticator_
{
   /**
    * Get oauth token.
    *
    * @param userId
    *    user
    * @return oauth token or <code>null</code>
    * @throws java.io.IOException
    *    if i/o error occurs when try to refresh expired oauth token
    */
   String getToken(String userId) throws IOException;

   /**
    * Process callback request.
    *
    * @param requestUri
    *    request URI. URI should contain authorization code generated by authorization server
    * @throws OAuthAuthenticationException
    *    if authentication failed or <code>requestUri</code> does not contain required parameters, e.g. 'code'
    */
   void callback(String requestUri) throws OAuthAuthenticationException;

   /**
    * Create authentication URL.
    *
    * @param userId
    *    user identifier. This parameter should be not <code>null</code> if user already authenticated in eXo IDE site
    *    but need to get OAuth access token to be able use some third party services. This parameter always
    *    <code>null</code> if third party OAuth provider used for authenticate user in eXo IDE.
    * @return URL for authentication
    */
   String getAuthenticateUri(String userId);

   /**
    * Invalidate OAuth token for specified user.
    *
    * @param userId
    *    user
    * @return <code>true</code> if OAuth token invalidated and <code>false</code> otherwise, e.g. if user does not have
    *         token yet
    */
   boolean invalidateToken(String userId);

   /**
    * Get user info.
    *
    * @param accessToken
    *    oauth access token
    * @return user info
    * @throws OAuthAuthenticationException
    *    if fail to get user info
    * @throws IOException
    *    if any i/o error occurs
    */
   User getUser(String accessToken) throws OAuthAuthenticationException, IOException;

   /**
    * Get the name of OAuth provider supported by current implementation.
    *
    * @return oauth provider name
    */
   String getOAuthProvider();
}
