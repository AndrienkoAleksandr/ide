
	<!--

		Copyright (C) 2009 eXo Platform SAS. This is free software; you can
		redistribute it and/or modify it under the terms of the GNU Lesser
		General Public License as published by the Free Software Foundation;
		either version 2.1 of the License, or (at your option) any later
		version. This software is distributed in the hope that it will be
		useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
		Lesser General Public License for more details. You should have
		received a copy of the GNU Lesser General Public License along with
		this software; if not, write to the Free Software Foundation, Inc., 51
		Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF
		site: http://www.fsf.org.
	-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.exoplatform.ideall</groupId>
		<artifactId>parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>


	<modelVersion>4.0.0</modelVersion>
	<artifactId>exo.ideall.assembly.gatein</artifactId>
	<packaging>pom</packaging>
	<name>eXo IDE based on GateIn Portal Packaging Assemblies</name>

	<dependencies>

		<dependency>
			<groupId>org.gatein.tools</groupId>
			<artifactId>packager</artifactId>
			<type>zip</type>
			<version>1.0.0-Beta05</version>
		</dependency>

		<dependency>
			<groupId>org.exoplatform.kernel</groupId>
			<artifactId>kernel.packaging.module</artifactId>
			<version>${org.exoplatform.kernel.version}</version>
			<type>js</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.core</groupId>
			<artifactId>core.packaging.module</artifactId>
			<version>${org.exoplatform.core.version}</version>
			<type>js</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.ws</groupId>
			<artifactId>ws.packaging.module</artifactId>
			<version>${org.exoplatform.ws.version}</version>
			<type>js</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.jcr</groupId>
			<artifactId>jcr.packaging.module</artifactId>
			<version>${org.exoplatform.jcr.version}</version>
			<type>js</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.portal</groupId>
			<artifactId>portal.packaging.module</artifactId>
			<version>${org.exoplatform.gatein.version}</version>
			<type>js</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.portal</groupId>
			<artifactId>portal.packaging.product</artifactId>
			<version>${org.exoplatform.gatein.version}</version>
			<type>js</type>
		</dependency>

		<dependency>
			<groupId>org.exoplatform.ideall</groupId>
			<artifactId>exo.ideall.component.commons</artifactId>
			<version>${org.exoplatform.ideall.version}</version>
			<type>jar</type>
		</dependency>


		<dependency>
			<groupId>org.exoplatform.ideall</groupId>
			<artifactId>exo.ideall.client</artifactId>
			<version>${org.exoplatform.ideall.version}</version>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.exoplatform.ideall</groupId>
			<artifactId>exo.ideall.extension.config</artifactId>
			<version>${org.exoplatform.ideall.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.exoplatform.ideall</groupId>
			<artifactId>exo.ideall.component.commons</artifactId>
			<version>${org.exoplatform.ideall.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.exoplatform.ideall</groupId>
			<artifactId>exo.ideall.gatein.gadget.register</artifactId>
			<version>${org.exoplatform.ideall.version}</version>
			<type>jar</type>
		</dependency>



		<dependency>
			<groupId>org.exoplatform.gwt</groupId>
			<artifactId>exo.gwt.smartgwt</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>war</type>
		</dependency>


		<dependency>
			<groupId>org.exoplatform.portal</groupId>
			<artifactId>exo.portal.starter.war</artifactId>
			<version>${org.exoplatform.gatein.version}</version>
			<type>war</type>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<!-- needed for exobuild to call maven dependency:get -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<repositoryUrl>xxx</repositoryUrl>
				</configuration>
			</plugin>
			<!-- check-out exobuild -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<overWriteSnapshots>true</overWriteSnapshots>
							<artifactItems>
								<artifactItem>
									<groupId>org.gatein.tools</groupId>
									<artifactId>packager</artifactId>
									<type>zip</type>
									<outputDirectory>target/packager</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeTypes>js</includeTypes>
							<stripVersion>true</stripVersion>
							<outputDirectory>${project.build.directory}/packager-conf</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>copy-dependencies-jar</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeTypes>jar</includeTypes>
							<includeArtifactIds>exo.core.component.script.groovy,exo.ideall.component.commons,exo.ideall.extension.config,exo.ideall.gatein.gadget.register</includeArtifactIds>
							<stripVersion>false</stripVersion>
							<outputDirectory>${project.build.directory}/packager-conf/jar</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>copy-dependencies-war</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeTypes>war</includeTypes>
							<includeArtifactIds>exo.ideall.client,exo.gwt.smartgwt,exo.portal.starter.war</includeArtifactIds>
							<stripVersion>false</stripVersion>
							<outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>repack-ideal-war</id>
						<phase>process-resources</phase>
						<configuration>
							<tasks>
								<echo message="Repack ideall.war change web.xml and add configuration.xml"/>
								<unwar
									src="${project.build.directory}/packager-conf/war/exo.ideall.client-1.0-SNAPSHOT.war"
									dest="${project.build.directory}/packager-conf/war/exo.ideall.client-1.0-SNAPSHOT" />
								<copy
									todir="${project.build.directory}/packager-conf/war/exo.ideall.client-1.0-SNAPSHOT/WEB-INF">
									<fileset dir="${basedir}/src/main/resources/ideal.war/WEB-INF" />
								</copy>
								<war destfile="${project.build.directory}/packager-conf/war/0ideall.war">
									<fileset
										dir="${project.build.directory}/packager-conf/war/exo.ideall.client-1.0-SNAPSHOT" />
								</war>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<execution>
						<id>repack-portal-war</id>
						<phase>install</phase>
						<configuration>
							<tasks>
                <echo message="Repack portal.war change repository-configuration.xml for adding workspace dev-monit"/>
								<copy file="${project.build.directory}/tomcat/webapps/portal.war"
									tofile="${project.build.directory}/packager-conf/war/portal.war" />

								<unwar src="${project.build.directory}/packager-conf/war/portal.war"
									dest="${project.build.directory}/packager-conf/war/portal-unwar" />
								<copy
									todir="${project.build.directory}/packager-conf/war/portal-unwar/WEB-INF/conf">
									<fileset dir="${basedir}/src/main/resources/portal.war/conf" />
								</copy>

								<war destfile="${project.build.directory}/packager-conf/war/portal.war">
									<fileset
										dir="${project.build.directory}/packager-conf/war/portal-unwar" />
								</war>

							</tasks>
						</configuration>
						<goals>
              <goal>run</goal>
            </goals>
					</execution>

					<execution>
						<id>copy-jar-war</id>
						<phase>install</phase>
						<configuration>
							<tasks>
								<delete file="${project.build.directory}/tomcat/webapps/portal.war" />
								<echo message="Deploying WAR" />
								<copy file="${project.build.directory}/packager-conf/war/portal.war"
									tofile="${project.build.directory}/tomcat/webapps/portal.war" />
								<copy
									file="${project.build.directory}/packager-conf/war/exo.gwt.smartgwt-1.0-SNAPSHOT.war"
									tofile="${project.build.directory}/tomcat/webapps/SmartGWT.war" />
								<copy
									file="${project.build.directory}/packager-conf/jar/exo.core.component.script.groovy-2.3.0-Beta05.jar"
									tofile="${project.build.directory}/tomcat/lib/exo.core.component.script.groovy-2.3.0-Beta05.jar" />

								<copy
									file="${project.build.directory}/packager-conf/jar/exo.ideall.extension.config-1.0-SNAPSHOT.jar"
									tofile="${project.build.directory}/tomcat/lib/exo.ideall.extension.config-1.0-SNAPSHOT.jar" />

								<copy
									file="${project.build.directory}/packager-conf/jar/exo.ideall.component.commons-1.0-SNAPSHOT.jar"
									tofile="${project.build.directory}/tomcat/lib/exo.ideall.component.commons-1.0-SNAPSHOT.jar" />

								<copy
									file="${project.build.directory}/packager-conf/jar/exo.ideall.gatein.gadget.register-1.0-SNAPSHOT.jar"
									tofile="${project.build.directory}/tomcat/lib/exo.ideall.gatein.gadget.register-1.0-SNAPSHOT.jar" />


								<copy file="${project.build.directory}/packager-conf/war/0ideall.war"
									tofile="${project.build.directory}/tomcat/webapps/0ideall.war" />

								<copy
									file="${project.build.directory}/packager-conf/war/exo.portal.starter.war-3.0.0-Beta04.war"
									tofile="${project.build.directory}/tomcat/webapps/starter.war" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

				</executions>
			</plugin>





		</plugins>
	</build>

	<properties>
		<gatein.working.dir>${basedir}/target</gatein.working.dir>
		<!--
			Default value for server installation dir
		-->
	</properties>

	<profiles>
		<profile>
			<id>pkg-tomcat</id>
			<build>
				<finalName>GateIn-${project.version}</finalName>
				<plugins>
					<!-- Ensure your environment is correctly setup -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>tomcat-check-environment-ready</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>exo.projects.directory.dependencies</property>
											<message>"You must define the property
												exo.projects.directory.dependencies to give the path to the
												directory where you store your applications servers"</message>
										</requireProperty>
										<requireProperty>
											<property>exo.projects.app.tomcat.version</property>
											<message>"You must define the property
												exo.projects.app.tomcat.version to give the name of the
												directory where is stored tomcat"</message>
										</requireProperty>
										<requireFilesExist>
											<files>
												<file>${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}/</file>
											</files>
											<message>"The following Tomcat directory doesn't exist :
												${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}"</message>
										</requireFilesExist>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- run exo build -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>tomcat-packaging</id>
								<phase>package</phase>
								<configuration>
									<executable>java</executable>
									<workingDirectory>${basedir}</workingDirectory>
									<arguments>
										<argument>-Dexo.package.home=${basedir}/target/packager</argument>
										<argument>-Dexo.current.dir=${basedir}</argument>
										<argument>-Dexo.base.dir=${exo.projects.directory.base}</argument>
										<argument>-Dexo.conf.dir=${basedir}/target/packager-conf</argument>
										<argument>-Dexo.working.dir=${gatein.working.dir}/</argument>
										<!--argument>-Dexo.src.dir=NONE</argument-->
										<argument>-Dexo.dep.dir=${exo.projects.directory.dependencies}</argument>
										<!--
											to get the server ref install
										-->
										<argument>-Dexo.m2.repos=file:${settings.localRepository}</argument>
										<argument>-Dclean.server=${exo.projects.app.tomcat.version}</argument>
										<argument>-Dexo.m2.home=${maven.home}</argument>
										<argument>-Xshare:auto</argument>
										<argument>-Xms128m</argument>
										<argument>-Xmx512m</argument>
										<argument>-classpath</argument>
										<argument>${basedir}/target/packager/lib/js.jar</argument>
										<argument>org.mozilla.javascript.tools.shell.Main</argument>
										<argument>${basedir}/target/packager/javascript/eXo/eXo.js</argument>
										<argument>exobuild</argument>
										<argument>--product=portal</argument>
										<argument>--deploy=tomcat</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--
						<plugin> <artifactId>maven-assembly-plugin</artifactId>
						<executions> <execution> <id>tomcat-assembly</id>
						<phase>package</phase> <goals> <goal>single</goal> </goals>
						<configuration> <descriptors>
						<descriptor>src/main/assembly/tomcat-zip.xml</descriptor>
						</descriptors> <attach>false</attach> </configuration>
						</execution> </executions> </plugin>
					-->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
