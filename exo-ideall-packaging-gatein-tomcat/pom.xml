WARNING: entity lost
WARNING: entity lost
WARNING: entity lost
WARNING: entity lost
WARNING: entity lost
WARNING: entity lost
<?xml version="1.0" encoding="UTF-8"?>
<!--

        Copyright (C) 2009 eXo Platform SAS. This is free software; you can
        redistribute it and/or modify it under the terms of the GNU Lesser
        General Public License as published by the Free Software Foundation;
        either version 2.1 of the License, or (at your option) any later
        version. This software is distributed in the hope that it will be
        useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
        Lesser General Public License for more details. You should have
        received a copy of the GNU Lesser General Public License along with
        this software; if not, write to the Free Software Foundation, Inc., 51
        Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF
        site: http://www.fsf.org.
    -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.exoplatform.ideall</groupId>
    <artifactId>ideall.parent</artifactId>
    <version>1.0-Beta03-SNAPSHOT</version>
  </parent>
  <artifactId>exo-ideall-packaging-gatein-tomcat</artifactId>
  <packaging>pom</packaging>
  <name>eXo IDE :: Based on GateIn Portal Assemblies</name>
  <properties>
    <gatein.working.dir>${basedir}/target</gatein.working.dir>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.gatein.tools</groupId>
      <artifactId>packager</artifactId>
      <version>1.0.0-CR02</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>kernel.packaging.module</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>core.packaging.module</artifactId>
      <version>${org.exoplatform.core.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ws</groupId>
      <artifactId>ws.packaging.module</artifactId>
      <version>${org.exoplatform.ws.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.jcr</groupId>
      <artifactId>jcr.packaging.module</artifactId>
      <version>${org.exoplatform.jcr.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>portal.packaging.module</artifactId>
      <version>${org.exoplatform.gatein.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>portal.packaging.product</artifactId>
      <version>${org.exoplatform.gatein.version}</version>
      <type>js</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.server.tomcat.patch</artifactId>
      <version>${org.exoplatform.gatein.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-server-component-commons</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-client</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-packaging-gatein-extension-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-packaging-gatein-extension-config</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-server-component-commons</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-server-component-gadget</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.ideall</groupId>
      <artifactId>exo-ideall-server-component-netvibes</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.gwt</groupId>
      <artifactId>exo.gwtframework.smartgwt</artifactId>
      <version>${org.exoplatform.gwtframework.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portal</groupId>
      <artifactId>exo.portal.starter.war</artifactId>
      <version>${org.exoplatform.gatein.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>${apache.commons-compress.version}</version>
      <type>jar</type>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- needed for exobuild to call maven dependency:get -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <repositoryUrl>xxx</repositoryUrl>
        </configuration>
      </plugin>
      <!-- check-out exobuild -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <overWriteSnapshots>true</overWriteSnapshots>
              <artifactItems>
                <artifactItem>
                  <groupId>org.gatein.tools</groupId>
                  <artifactId>packager</artifactId>
                  <type>zip</type>
                  <outputDirectory>target/packager</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>js</includeTypes>
              <stripVersion>true</stripVersion>
              <outputDirectory>${project.build.directory}/packager-conf</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies-jar</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>jar</includeTypes>
              <includeArtifactIds>exo.core.component.script.groovy,exo-ideall-server-component-commons,exo-ideall-packaging-gatein-extension-config,exo-ideall-server-component-gadget,exo-ideall-server-component-netvibes,commons-compress</includeArtifactIds>
              <stripVersion>false</stripVersion>
              <outputDirectory>${project.build.directory}/packager-conf/jar</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies-war</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>war</includeTypes>
              <includeArtifactIds>exo-ideall-packaging-gatein-extension-webapp,exo-ideall-client,exo.gwtframework.smartgwt,exo.portal.starter.war</includeArtifactIds>
              <stripVersion>false</stripVersion>
              <outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-jar-war</id>
            <phase>install</phase>
            <configuration>
              <tasks>
                <copy file="${project.build.directory}/packager-conf/war/exo-ideall-packaging-gatein-extension-webapp-${project.version}.war" tofile="${project.build.directory}/tomcat/webapps/ideall-extension.war"/>
                <copy file="${project.build.directory}/packager-conf/war/exo-ideall-client-${project.version}.war" tofile="${project.build.directory}/tomcat/webapps/IDEall.war"/>
                <copy file="${project.build.directory}/packager-conf/war/exo.gwtframework.smartgwt-${org.exoplatform.gwtframework.version}.war" tofile="${project.build.directory}/tomcat/webapps/SmartGWT.war"/>
                <copy file="${project.build.directory}/packager-conf/jar/exo.core.component.script.groovy-${org.exoplatform.core.version}.jar" tofile="${project.build.directory}/tomcat/lib/exo.core.component.script.groovy-${org.exoplatform.core.version}.jar"/>
                <copy file="${project.build.directory}/packager-conf/jar/exo-ideall-packaging-gatein-extension-config-${project.version}.jar" tofile="${project.build.directory}/tomcat/lib/exo-ideall-packaging-gatein-extension-config-${project.version}.jar"/>
                <copy file="${project.build.directory}/packager-conf/jar/exo-ideall-server-component-commons-${project.version}.jar" tofile="${project.build.directory}/tomcat/lib/exo-ideall-server-component-commons-${project.version}.jar"/>
                <copy file="${project.build.directory}/packager-conf/jar/exo-ideall-server-component-gadget-${project.version}.jar" tofile="${project.build.directory}/tomcat/lib/exo-ideall-server-component-gadget-${project.version}.jar"/>
                <copy file="${project.build.directory}/packager-conf/jar/exo-ideall-server-component-netvibes-${project.version}.jar" tofile="${project.build.directory}/tomcat/lib/exo-ideall-server-component-netvibes-${project.version}.jar"/>
                <copy file="${project.build.directory}/packager-conf/jar/commons-compress-${apache.commons-compress.version}.jar" tofile="${project.build.directory}/tomcat/lib/commons-compress-${apache.commons-compress.version}.jar"/>
                <unwar src="${project.build.directory}/packager-conf/war/exo.portal.starter.war-${org.exoplatform.gatein.version}.war" dest="${project.build.directory}/tomcat/webapps/starter.war"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>copy-js</id>
            <phase>package</phase>
            <configuration>
              <tasks>
                <copy file="${basedir}/src/main/resources/Tomcat.js" tofile="${project.build.directory}/packager/javascript/eXo/server/Tomcat.js"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>copy-server.xml</id>
            <phase>install</phase>
            <configuration>
              <tasks>
                <copy file="${basedir}/src/main/resources/server.xml" tofile="${project.build.directory}/tomcat/conf/server.xml" overwrite="true"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <!--
            Default value for server installation dir
        -->
  <profiles>
    <profile>
      <id>pkg-tomcat</id>
      <build>
        <finalName>GateIn-${project.version}</finalName>
        <plugins>
          <!-- Ensure your environment is correctly setup -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>tomcat-check-environment-ready</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>exo.projects.directory.dependencies</property>
                      <message>&quot;You must define the property
                                                exo.projects.directory.dependencies to give the path to the
                                                directory where you store your applications servers&quot;</message>
                    </requireProperty>
                    <requireProperty>
                      <property>exo.projects.app.tomcat.version</property>
                      <message>&quot;You must define the property
                                                exo.projects.app.tomcat.version to give the name of the
                                                directory where is stored tomcat&quot;</message>
                    </requireProperty>
                    <requireFilesExist>
                      <files>
                        <file>${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}/</file>
                      </files>
                      <message>&quot;The following Tomcat directory doesn't exist :
                                                ${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}&quot;</message>
                    </requireFilesExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- run exo build -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>tomcat-packaging</id>
                <phase>package</phase>
                <configuration>
                  <executable>java</executable>
                  <workingDirectory>${basedir}</workingDirectory>
                  <arguments>
                    <argument>-Dexo.package.home=${basedir}/target/packager</argument>
                    <argument>-Dexo.current.dir=${basedir}</argument>
                    <argument>-Dexo.base.dir=${exo.projects.directory.base}</argument>
                    <argument>-Dexo.conf.dir=${basedir}/target/packager-conf</argument>
                    <argument>-Dexo.working.dir=${gatein.working.dir}/</argument>
                    <!--argument>-Dexo.src.dir=NONE</argument-->
                    <argument>-Dexo.dep.dir=${exo.projects.directory.dependencies}</argument>
                    <!--
                                            to get the server ref install
                                        -->
                    <argument>-Dexo.m2.repos=file:${settings.localRepository}</argument>
                    <argument>-Dclean.server=${exo.projects.app.tomcat.version}</argument>
                    <argument>-Dexo.m2.home=${maven.home}</argument>
                    <argument>-Xms128m</argument>
                    <argument>-Xmx512m</argument>
                    <argument>-classpath</argument>
                    <argument>${basedir}/target/packager/lib/js.jar</argument>
                    <argument>org.mozilla.javascript.tools.shell.Main</argument>
                    <argument>${basedir}/target/packager/javascript/eXo/eXo.js</argument>
                    <argument>exobuild</argument>
                    <argument>--product=portal</argument>
                    <argument>--deploy=tomcat</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
