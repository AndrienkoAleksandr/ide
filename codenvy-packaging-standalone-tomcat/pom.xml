<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2009 eXo Platform SAS. This is free software; you can redistribute it and/or modify it under the terms 
	of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, 
	or (at your option) any later version. This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
	without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
	License for more details. You should have received a copy of the GNU Lesser General Public License along with this software; 
	if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF 
	site: http://www.fsf.org. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.exoplatform.ide</groupId>
		<artifactId>exo-ide-parent</artifactId>
		<version>2.6.5-SNAPSHOT</version>
	</parent>

	<artifactId>codenvy-packaging-standalone-tomcat</artifactId>
	<packaging>pom</packaging>
	<name>Codenvy IDE :: Assemblies Tomcat</name>
	<dependencies>
		<dependency>
			<groupId>org.exoplatform.ide</groupId>
			<artifactId>codenvy-application-war</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.ide</groupId>
			<artifactId>exo-ide-maven</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.ide</groupId>
			<artifactId>exo-ide-codeassistant-storage</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.codenvy.organization</groupId>
			<artifactId>codenvy-organization-packaging-api-war</artifactId>
			<type>war</type>
			<version>${com.codenvy.organization.version}</version>
		</dependency>
		<dependency>
			<groupId>org.exoplatform.ide</groupId>
			<artifactId>exo-ide-git-server</artifactId>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${ch.qos.logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${ch.qos.logback.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-java-sdk</artifactId>
			<type>zip</type>
		</dependency>

	</dependencies>
	        <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>copy-clear-tomcat</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.apache.tomcat</groupId>
                                 <artifactId>tomcat</artifactId>
                                 <type>zip</type>
                                 <version>${tomcat.version}</version>
                                 <overWrite>false</overWrite>
                                 <outputDirectory>${project.build.directory}/packager-conf/zip</outputDirectory>
                                 <destFileName>tomcat.zip</destFileName>
                              </artifactItem>
                           </artifactItems>
                        </configuration>
                     </execution>
                     <execution>
                        <id>copy-dependencies-war</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                           <includeTypes>war</includeTypes>
                           <silent>true</silent>
                           <outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
                        </configuration>
                     </execution>
                     <execution>
                        <id>copy-dependencies-logger</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                           <includeTypes>jar</includeTypes>
                           <stripVersion>true</stripVersion>
                           <silent>true</silent>
                           <outputDirectory>${project.build.directory}/packager-conf/jar/</outputDirectory>
                        </configuration>
                     </execution>
                     <execution>
                        <id>copy-appengine-zip</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <configuration>
                           <stripVersion>true</stripVersion>
                           <silent>true</silent>
                           <outputDirectory>${project.build.directory}/packager-conf/appengine</outputDirectory>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>com.google.appengine</groupId>
                                 <artifactId>appengine-java-sdk</artifactId>
                                 <version>${appengine.version}</version>
                                 <type>zip</type>
                              </artifactItem>
                           </artifactItems>
                        </configuration>
                     </execution>
                     <execution>
                        <id>copy-lucene-autocomplite-index</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <configuration>
                           <stripVersion>true</stripVersion>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.exoplatform.ide</groupId>
                                 <artifactId>ide-codeassistant-lucene-index</artifactId>
                                 <version>${ide.codeassistant.lucene.index.version}</version>
                                 <type>zip</type>
                              </artifactItem>
                           </artifactItems>
                           <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>Prepare Tomcat</id>
                        <phase>prepare-package</phase>
                        <configuration>
                           <tasks>
                              <unwar src="${project.build.directory}/packager-conf/zip/tomcat.zip" dest="${project.build.directory}/packager-conf/zip/tomcat-ide">
                                 <patternset>
                                    <exclude name="**/ROOT/**" />
                                    <exclude name="**/docs/**" />
                                    <exclude name="**/examples/**" />
                                    <exclude name="**/host-manager/**" />
                                    <exclude name="**/manager/**" />
                                 </patternset>
                              </unwar>
                              <copy todir="${project.build.directory}/tomcat-ide" overwrite="true">
                                 <fileset dir="${project.build.directory}/packager-conf/zip/tomcat-ide/apache-tomcat-${tomcat.version}" />
                              </copy>
                              <copy todir="${project.build.directory}/tomcat-ide" overwrite="true">
                                 <fileset dir="${basedir}/src/main/resources/tomcat" />
                              </copy>
                              <chmod dir="${project.build.directory}/tomcat-ide/bin" perm="+x" includes="**/*.sh" />
                              <move file="${project.build.directory}/packager-conf/jar/log4j-over-slf4j.jar" tofile="${project.build.directory}/tomcat-ide/lib/log4j-over-slf4j.jar" />
                              <move file="${project.build.directory}/packager-conf/jar/logback-core.jar" tofile="${project.build.directory}/tomcat-ide/lib/logback-core.jar" />
                              <move file="${project.build.directory}/packager-conf/jar/logback-classic.jar" tofile="${project.build.directory}/tomcat-ide/lib/logback-classic.jar" />
                              <move file="${project.build.directory}/packager-conf/jar/slf4j-api.jar" tofile="${project.build.directory}/tomcat-ide/lib/slf4j-api.jar" />
                              <move file="${project.build.directory}/packager-conf/jar/jul-to-slf4j.jar" tofile="${project.build.directory}/tomcat-ide/lib/jul-to-slf4j.jar" />
                              <copy file="${project.build.directory}/packager-conf/war/exo-ide-git-server-${project.version}.war" tofile="${project.build.directory}/tomcat-ide/webapps/git.war" overwrite="true" />
                              <copy file="${project.build.directory}/packager-conf/war/exo-ide-maven-${project.version}.war" tofile="${project.build.directory}/tomcat-ide/webapps/builder.war" overwrite="true" />
                              <copy file="${project.build.directory}/packager-conf/war/exo-ide-codeassistant-storage-${project.version}.war" tofile="${project.build.directory}/tomcat-ide/webapps/codeassistant-storage.war" overwrite="true" />
                              <copy file="${project.build.directory}/packager-conf/war/codenvy-organization-packaging-api-war-${com.codenvy.organization.version}.war" tofile="${project.build.directory}/tomcat-ide/webapps/userdb.war" overwrite="true" />
                              <unzip src="${project.build.directory}/ide-codeassistant-lucene-index.zip" dest="${project.build.directory}/tomcat-ide" />
                              <unzip src="${project.build.directory}/packager-conf/appengine/appengine-java-sdk.zip" dest="${project.build.directory}/tomcat-ide">
                                 <patternset>
                                    <exclude name="**/bin/**" />
                                    <exclude name="**/demos/**" />
                                    <exclude name="**/src/**" />
                                    <exclude name="**/docs/javadoc/**" />
                                    <exclude name="**/docs/remoteapi/**" />
                                    <exclude name="**/docs/testing/**" />
                                    <exclude name="**/docs/tools/**" />
                                    <exclude name="**/docs/javadoc/**" />
                                    <exclude name="**/ABOUT" />
                                    <exclude name="**/COPYING" />
                                    <exclude name="**/README" />
                                    <exclude name="**/README.ORM" />
                                    <exclude name="**/RELEASE_NOTES" />
                                    <exclude name="**/RELEASE_NOTES.ORM" />
                                 </patternset>
                              </unzip>
                              <move file="${project.build.directory}/tomcat-ide/appengine-java-sdk-${appengine.version}" tofile="${project.build.directory}/tomcat-ide/appengine-java-sdk" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <executions>
                     <!-- Create the distribution zip and attach it to maven -->
                     <execution>
                        <id>tomcat-zip</id>
                        <phase>package</phase>
                        <goals>
                           <goal>single</goal>
                        </goals>
                        <configuration>
                           <appendAssemblyId>false</appendAssemblyId>
                           <updateOnly>false</updateOnly>
                           <descriptors>
                              <descriptor>${project.basedir}/src/main/assembly/tomcat-archive.xml</descriptor>
                           </descriptors>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>Prepare IDE WAR</id>
								<phase>prepare-package</phase>
								<configuration>
									<tasks>
										<unwar src="${project.build.directory}/packager-conf/war/codenvy-application-war-${project.version}.war" dest="${project.build.directory}/packager-conf/war/ide">
										</unwar>
										<war destfile="${project.build.directory}/tomcat-ide/webapps/ide.war" needxmlfile="false">
											<fileset dir="${project.build.directory}/packager-conf/war/ide" />
										</war>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>devmode</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>Prepare IDE WAR dev-mode</id>
                        <phase>prepare-package</phase>
                        <configuration>
                           <tasks>
                              <unwar src="${project.build.directory}/packager-conf/war/codenvy-application-war-${project.version}.war" dest="${project.build.directory}/packager-conf/war/ide">
                              </unwar>
                              <move todir="${project.build.directory}/packager-conf/war/ide/">
                                 <fileset dir="${project.build.directory}/packager-conf/war/ide/_app/" />
                              </move>
                              <copy file="${project.basedir}/src/main/resources/devmode/web.xml" tofile="${project.build.directory}/packager-conf/war/ide/WEB-INF/web.xml" overwrite="true" />
                              <copy file="${project.basedir}/src/main/resources/devmode/DevMode.html" tofile="${project.build.directory}/packager-conf/war/ide/DevMode.html" overwrite="true" />
                              <copy file="${project.basedir}/src/main/resources/devmode/login.html" tofile="${project.build.directory}/packager-conf/war/ide/login.html" overwrite="true" />
                              <copy file="${project.basedir}/src/main/resources/devmode/logout.jsp" tofile="${project.build.directory}/packager-conf/war/ide/logout.jsp" overwrite="true" />
                              <war destfile="${project.build.directory}/tomcat-ide/webapps/IDE.war" needxmlfile="false">
                                 <fileset dir="${project.build.directory}/packager-conf/war/ide" />
                              </war>
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
		</profile>
	</profiles>
</project>
