<?xml version="1.0" encoding="UTF-8"?>
<!--

    CODENVY CONFIDENTIAL
    __________________

     [2012] - [2013] Codenvy, S.A.
     All Rights Reserved.

    NOTICE:  All information contained herein is, and remains
    the property of Codenvy S.A. and its suppliers,
    if any.  The intellectual and technical concepts contained
    herein are proprietary to Codenvy S.A.
    and its suppliers and may be covered by U.S. and Foreign Patents,
    patents in process, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Codenvy S.A..

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.codenvy.ide</groupId>
        <artifactId>codenvy-ide-parent</artifactId>
        <version>3.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>codenvy-ext-extensions-runtime</artifactId>
    <packaging>jar</packaging>
    <name>Codenvy Extension :: Extensions :: Runtime</name>

    <properties>
        <generated.sources.directory>${project.build.directory}/generated-sources/gen</generated.sources.directory>
        <!-- Codenvy Platform version that should be used to launch custom extensions. -->
        <!-- TODO should depend on tag version -->
        <codenvyPlatform.version>3.0.0-SNAPSHOT</codenvyPlatform.version>
    </properties>

    <dependencies>
        <!-- Client libraries -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.codenvy.ide</groupId>
            <artifactId>codenvy-ide-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.codenvy.ide</groupId>
            <artifactId>codenvy-ext-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.codenvy.ide</groupId>
            <artifactId>codenvy-ext-maven</artifactId>
        </dependency>
        <dependency>
            <groupId>com.codenvy.ide</groupId>
            <artifactId>codenvy-ext-java-runtime</artifactId>
        </dependency>

        <!-- Server libraries -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>exo-ide-vfs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>exo-ide-vfs-fs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
        </dependency>
        <dependency>
            <groupId>com.codenvy.platform-api</groupId>
            <artifactId>codenvy-api-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile-dto-interfaces</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <includes>
                                <include>**/shared/*</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>dto-server</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.codenvy.ide.dto.DtoGenerator</mainClass>
                            <arguments>
                                <argument>--dto_packages=com.codenvy.ide.ext.extruntime.shared,com.codenvy.ide.extension.maven.shared</argument>
                                <argument>--gen_file_name=${generated.sources.directory}/com/codenvy/ide/ext/extruntime/dto/server/DtoServerImpls.java</argument>
                                <argument>--impl=server</argument>
                                <argument>--package_base=${generated.sources.directory}/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dto-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.codenvy.ide.dto.DtoGenerator</mainClass>
                            <arguments>
                                <argument>--dto_packages=com.codenvy.ide.ext.extruntime.shared</argument>
                                <argument>--gen_file_name=${generated.sources.directory}/com/codenvy/ide/ext/extruntime/dto/client/DtoClientImpls.java</argument>
                                <argument>--impl=client</argument>
                                <argument>--package_base=${generated.sources.directory}/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>add-generated-dto-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated.sources.directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-clean-tomcat</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.tomcat</groupId>
                                    <artifactId>tomcat</artifactId>
                                    <type>zip</type>
                                    <version>${tomcat.version}</version>
                                    <outputDirectory>${project.build.directory}/classes/tomcat</outputDirectory>
                                    <destFileName>tomcat.zip</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.codenvy.organization</groupId>
                                    <artifactId>codenvy-organization-packaging-api-war</artifactId>
                                    <type>war</type>
                                    <version>${com.codenvy.organization.version}</version>
                                    <outputDirectory>${project.build.directory}/classes/tomcat</outputDirectory>
                                    <destFileName>userdb.war</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.slf4j</groupId>
                                    <artifactId>slf4j-api</artifactId>
                                    <version>${org.slf4j.version}</version>
                                    <outputDirectory>${project.build.directory}/classes/tomcat/lib</outputDirectory>
                                    <destFileName>slf4j-api.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.slf4j</groupId>
                                    <artifactId>jul-to-slf4j</artifactId>
                                    <version>${org.slf4j.version}</version>
                                    <outputDirectory>${project.build.directory}/classes/tomcat/lib</outputDirectory>
                                    <destFileName>jul-to-slf4j.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>ch.qos.logback</groupId>
                                    <artifactId>logback-core</artifactId>
                                    <version>${ch.qos.logback.version}</version>
                                    <outputDirectory>${project.build.directory}/classes/tomcat/lib</outputDirectory>
                                    <destFileName>logback-core.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>ch.qos.logback</groupId>
                                    <artifactId>logback-classic</artifactId>
                                    <version>${ch.qos.logback.version}</version>
                                    <outputDirectory>${project.build.directory}/classes/tomcat/lib</outputDirectory>
                                    <destFileName>logback-classic.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.codenvy.ide</groupId>
                                    <artifactId>codenvy-ide-client</artifactId>
                                    <version>${codenvyPlatform.version}</version>
                                    <type>jar</type>
                                    <classifier>sources</classifier>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <destFileName>codenvy-ide-client.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-tomcat-bundle</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- Unzip Tomcat package -->
                                <unzip src="${project.build.directory}/classes/tomcat/tomcat.zip"
                                       dest="${project.build.directory}/classes/tomcat/unzip">
                                    <patternset>
                                        <exclude name="**/ROOT/**"/>
                                        <exclude name="**/docs/**"/>
                                        <exclude name="**/examples/**"/>
                                        <exclude name="**/manager/**"/>
                                        <exclude name="**/host-manager/**"/>
                                    </patternset>
                                </unzip>
                                <move todir="${project.build.directory}/classes/tomcat/unzip">
                                    <fileset dir="${project.build.directory}/classes/tomcat/unzip/apache-tomcat-${tomcat.version}"/>
                                </move>
                                <delete file="${project.build.directory}/classes/tomcat/tomcat.zip"/>
                                <delete dir="${project.build.directory}/classes/tomcat/unzip/apache-tomcat-${tomcat.version}"/>

                                <!-- Move additional libs for logging to lib directory -->
                                <move todir="${project.build.directory}/classes/tomcat/unzip/lib">
                                    <fileset dir="${project.build.directory}/classes/tomcat/lib"/>
                                </move>

                                <!-- Move pre-configured scripts and configuration files -->
                                <copy todir="${project.build.directory}/classes/tomcat/unzip/bin">
                                    <fileset dir="${project.build.directory}/classes/tomcat/bin"/>
                                </copy>
                                <copy todir="${project.build.directory}/classes/tomcat/unzip/conf">
                                    <fileset dir="${project.build.directory}/classes/tomcat/conf"/>
                                </copy>

                                <!-- Move Codenvy Organization WAR to webapps directory -->
                                <move file="${project.build.directory}/classes/tomcat/userdb.war"
                                      tofile="${project.build.directory}/classes/tomcat/unzip/webapps/userdb.war"/>

                                <!-- Zip prepared Tomcat package and remove temporary directory -->
                                <zip basedir="${project.build.directory}/classes/tomcat/unzip"
                                     destfile="${project.build.directory}/classes/tomcat/tomcat.zip"/>
                                <delete dir="${project.build.directory}/classes/tomcat/unzip"/>

                                <!-- Prepare codenvy-ide-client sources -->
                                <unzip src="${project.build.directory}/classes/codenvy-ide-client.jar"
                                       dest="${project.build.directory}/classes/codenvy-ide-client-sources">
                                    <patternset>
                                        <exclude name="**/META-INF/**"/>
                                        <exclude name="**/IDEInjector.java"/>
                                        <exclude name="**/ExtensionManager.java"/>
                                    </patternset>
                                </unzip>
                                <unzip src="${project.build.directory}/classes/CodenvyClient.zip"
                                       dest="${project.build.directory}/classes/CodenvyClient">
                                </unzip>
                                <copy todir="${project.build.directory}/classes/CodenvyClient/codenvy-ide-client/src/main/java">
                                    <fileset dir="${project.build.directory}/classes/codenvy-ide-client-sources"/>
                                </copy>
                                <zip basedir="${project.build.directory}/classes/CodenvyClient"
                                     destfile="${project.build.directory}/classes/CodenvyClient.zip"/>
                                <delete file="${project.build.directory}/classes/codenvy-ide-client.jar"/>
                                <delete dir="${project.build.directory}/classes/codenvy-ide-client-sources"/>
                                <delete dir="${project.build.directory}/classes/CodenvyClient"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/java</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <sourceDirectory>src/main/java</sourceDirectory>
        <outputDirectory>target/classes</outputDirectory>
    </build>

</project>
