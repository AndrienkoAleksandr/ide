<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2009 eXo Platform SAS. This is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public 
   License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This software is distributed 
   in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
   See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this software; 
   if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF site: http://www.fsf.org. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.exoplatform.ide</groupId>
      <artifactId>exo-ide-parent</artifactId>
      <version>1.1.0-SNAPSHOT</version>
   </parent>
   <artifactId>exo-ide-packaging-standalone-tomcat</artifactId>
   <packaging>pom</packaging>
   <name>eXo IDE :: Assemblies Tomcat</name>
   <dependencies>
      <dependency>
         <groupId>org.exoplatform.ide</groupId>
         <artifactId>exo-ide-client-application</artifactId>
         <version>${project.version}</version>
         <type>war</type>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-dependencies-war</id>
                  <phase>process-resources</phase>
                  <goals>
                     <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                     <includeTypes>war</includeTypes>
                     <stripVersion>false</stripVersion>
                     <outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin>


	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<executions>
		
			<execution>
				<id>copy-dependencies2</id>
				<phase>process-resources</phase>
				<goals>
					<goal>copy</goal>
				</goals>
				
				<configuration>

					<artifactItems>

						<artifactItem>
							<groupId>javax.jcr</groupId>
							<artifactId>jcr</artifactId>
							<version>${javax.jcr.version}</version>
							<type>java-source</type>
						</artifactItem>

					   <artifactItem>
			               <groupId>org.chromattic</groupId>
			               <artifactId>chromattic.apt</artifactId>
			               <version>${version.chromattic}</version>
			               <type>java-source</type>
                       </artifactItem>

                       <artifactItem>
			               <groupId>org.chromattic</groupId>
			               <artifactId>chromattic.api</artifactId>
			               <version>${version.chromattic}</version>
			               <type>java-source</type>
                       </artifactItem>

                       <artifactItem>
			               <groupId>org.chromattic</groupId>
			               <artifactId>chromattic.spi</artifactId>
			               <version>${version.chromattic}</version>
			               <type>java-source</type>
                       </artifactItem>

                       <artifactItem>
			               <groupId>org.chromattic</groupId>
			               <artifactId>chromattic.core</artifactId>
			               <version>${version.chromattic}</version>
			               <type>java-source</type>
                       </artifactItem>

                       <artifactItem>
			               <groupId>org.chromattic</groupId>
			               <artifactId>chromattic.ext</artifactId>
			               <version>${version.chromattic}</version>
			               <type>java-source</type>
                       </artifactItem>

                       <artifactItem>
					        <groupId>javax.annotation</groupId>
					        <artifactId>jsr250-api</artifactId>
					        <version>${javax.annotation.version}</version>
			               <type>java-source</type>
                       </artifactItem>

						<artifactItem>
							<groupId>javax.ws.rs</groupId>
							<artifactId>jsr311-api</artifactId>
							<version>${javax.ws.rs.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.ws</groupId>
							<artifactId>exo.ws.commons</artifactId>
							<version>${org.exoplatform.ws.version}</version>
							<type>java-source</type>
						</artifactItem>
						
	   					<artifactItem>
							<groupId>org.exoplatform.ws</groupId>
						    <artifactId>exo.ws.frameworks.json</artifactId>
							<version>${org.exoplatform.ws.version}</version>
							<type>java-source</type>
						</artifactItem>
						
	   					<artifactItem>
							<groupId>org.exoplatform.ws</groupId>
						    <artifactId>exo.ws.rest.core</artifactId>
							<version>${org.exoplatform.ws.version}</version>
							<type>java-source</type>
						</artifactItem>
						
	   					<artifactItem>
							<groupId>org.exoplatform.ws</groupId>
						    <artifactId>exo.ws.rest.ext</artifactId>
							<version>${org.exoplatform.ws.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.kernel</groupId>
						    <artifactId>exo.kernel.commons</artifactId>
							<version>${org.exoplatform.kernel.version}</version>
							<type>java-source</type>
						</artifactItem>
						
	   					<artifactItem>
							<groupId>org.exoplatform.kernel</groupId>
						    <artifactId>exo.kernel.component.command</artifactId>
							<version>${org.exoplatform.kernel.version}</version>
							<type>java-source</type>
						</artifactItem>
					
	   					<artifactItem>
							<groupId>org.exoplatform.kernel</groupId>
						    <artifactId>exo.kernel.component.common</artifactId>
							<version>${org.exoplatform.kernel.version}</version>
							<type>java-source</type>
						</artifactItem>
						
	   					<artifactItem>
							<groupId>org.exoplatform.kernel</groupId>
						    <artifactId>exo.kernel.container</artifactId>
							<version>${org.exoplatform.kernel.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.core</groupId>
						    <artifactId>exo.core.component.database</artifactId>
							<version>${org.exoplatform.core.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.core</groupId>
						    <artifactId>exo.core.component.document</artifactId>
							<version>${org.exoplatform.core.version}</version>
							<type>java-source</type>
						</artifactItem>
						
	   					<artifactItem>
							<groupId>org.exoplatform.core</groupId>
						    <artifactId>exo.core.component.organization.api</artifactId>
							<version>${org.exoplatform.core.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.core</groupId>
						    <artifactId>exo.core.component.script.groovy</artifactId>
							<version>${org.exoplatform.core.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.core</groupId>
						    <artifactId>exo.core.component.security.core</artifactId>
							<version>${org.exoplatform.core.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.core</groupId>
						    <artifactId>exo.core.component.xml-processing</artifactId>
							<version>${org.exoplatform.core.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.jcr</groupId>
						    <artifactId> exo.jcr.component.core</artifactId>
							<version>${org.exoplatform.jcr.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.jcr</groupId>
						    <artifactId>exo.jcr.component.ext</artifactId>
							<version>${org.exoplatform.jcr.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.jcr</groupId>
						    <artifactId>exo.jcr.component.webdav</artifactId>
							<version>${org.exoplatform.jcr.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.jcr</groupId>
						    <artifactId>exo.jcr.framework.command</artifactId>
							<version>${org.exoplatform.jcr.version}</version>
							<type>java-source</type>
						</artifactItem>

	   					<artifactItem>
							<groupId>org.exoplatform.jcr</groupId>
						    <artifactId>exo.jcr.framework.web</artifactId>
							<version>${org.exoplatform.jcr.version}</version>
							<type>java-source</type>
						</artifactItem>

					</artifactItems>

					<outputDirectory>${project.build.directory}/tomcat-ide/lib-docs</outputDirectory>

				</configuration>
			</execution>
		</executions>
	</plugin>         
         
         
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-cleare-tomcat</id>
                  <phase>process-resources</phase>
                  <configuration>
                     <tasks>
                        <copy todir="${project.build.directory}/tomcat-ide">
                           <fileset dir="${exo.projects.directory.dependencies}/${exo.projects.app.tomcat.version}/" />
                        </copy>
                     </tasks>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <profiles>
     <profile>
         <id>pkg-demo-site</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>unwar-ide</id>
                        <phase>compile</phase>
                        <configuration>
                           <tasks>
                              <unwar src="${project.build.directory}/packager-conf/war/exo-ide-client-application-${project.version}.war" dest="${project.build.directory}/packager-conf/unwar" >
                               <patternset>
                                  <exclude name="**/exo-configuration.xml"/>
                                  <exclude name="**/exo-jcr-config.xml"/>
                               </patternset>
                              </unwar>
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>copy-war</id>
                        <phase>install</phase>
                        <configuration>
                           <tasks>
                              <copy todir="${project.build.directory}/packager-conf/unwar" overwrite="true">
                                 <fileset dir="${basedir}/src/main/resources/ide-war-demo">
                                    <exclude name="**/conf/exo-jcr-config-mysql.xml" />
                                    <exclude name="**/exo-configuration.xml"/>
                                    <exclude name="**/exo-jcr-config.xml"/>
                                 </fileset>
                              </copy>
                              <copy todir="${project.build.directory}/tomcat-ide" overwrite="true">
                                 <fileset dir="${basedir}/src/main/resources/tomcat/demo-site" />
                              </copy>
                              <copy file="${basedir}/src/main/resources/exo-configuration-hsql.xml" tofile="${project.build.directory}/tomcat-ide/exo-configuration.xml"/>
                              <chmod dir="${project.build.directory}/tomcat-ide/bin" perm="+x"   includes="**/*.sh"/>
                              <move todir="${project.build.directory}/tomcat-ide/lib">
                                 <fileset dir="${project.build.directory}/packager-conf/unwar/WEB-INF/lib" />
                              </move>
                              <!-- war destfile="${project.build.directory}/tomcat-ide/webapps/IDE.war" needxmlfile="false">
                                 <fileset dir="${project.build.directory}/packager-conf/unwar" />
                              </war-->
                               <copy todir="${project.build.directory}/tomcat-ide/webapps/IDE" >
                                 <fileset dir="${project.build.directory}/packager-conf/unwar" />
                              </copy>
                              
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>pkg-mysql-demo-site</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <dependencies>
            <dependency>
               <groupId>mysql</groupId>
               <artifactId>mysql-connector-java</artifactId>
               <version>5.1.13</version>
               <scope>runtime</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>copy-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                           <includeTypes>jar</includeTypes>
                           <outputDirectory>${project.build.directory}/tomcat-ide/lib</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>unwar-ide</id>
                        <phase>compile</phase>
                        <configuration>
                           <tasks>
                              <unwar src="${project.build.directory}/packager-conf/war/exo-ide-client-application-${project.version}.war"
                               dest="${project.build.directory}/packager-conf/unwar" >
                               <patternset>
                                  <exclude name="**/exo-configuration.xml"/>
                                  <exclude name="**/exo-jcr-config.xml"/>
                               </patternset>
                               </unwar>
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>copy-war</id>
                        <phase>install</phase>
                        <configuration>
                           <tasks>
                              <copy todir="${project.build.directory}/packager-conf/unwar" overwrite="true">
                                  <fileset dir="${basedir}/src/main/resources/ide-war-demo">
                                    <exclude name="**/conf/exo-jcr-config-hsql.xml" />
                                    <exclude name="**/exo-configuration.xml"/>
                                    <exclude name="**/exo-jcr-config.xml"/>
                                 </fileset>
                              </copy>
                              <copy todir="${project.build.directory}/tomcat-ide" overwrite="true">
                                 <fileset dir="${basedir}/src/main/resources/tomcat/demo-site" />
                              </copy>
                              <copy file="${basedir}/src/main/resources/exo-configuration-mysql.xml" 
                              tofile="${project.build.directory}/tomcat-ide/exo-configuration.xml"/>
                              <chmod dir="${project.build.directory}/tomcat-ide/bin" perm="+x"   includes="**/*.sh"/>
                              <move todir="${project.build.directory}/tomcat-ide/lib">
                                 <fileset dir="${project.build.directory}/packager-conf/unwar/WEB-INF/lib" />
                              </move>
                              <!-- war destfile="${project.build.directory}/tomcat-ide/webapps/IDE.war" needxmlfile="false">
                                 <fileset dir="${project.build.directory}/packager-conf/unwar" />
                              </war-->
                               <copy todir="${project.build.directory}/tomcat-ide/webapps/IDE" >
                                 <fileset dir="${project.build.directory}/packager-conf/unwar" />
                              </copy>
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>selenium-test</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>unwar-ide</id>
                        <phase>compile</phase>
                        <configuration>
                           <tasks>
                              <unwar src="${project.build.directory}/packager-conf/war/exo-ide-client-application-${project.version}.war" dest="${project.build.directory}/packager-conf/unwar" >
                               <patternset>
                                  <exclude name="**/exo-configuration.xml"/>
                               </patternset>
                               </unwar>
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>copy-war</id>
                        <phase>install</phase>
                        <configuration>
                           <tasks>
                              <copy todir="${project.build.directory}/packager-conf/unwar" overwrite="true">
                                 <fileset dir="${basedir}/src/main/resources/ide-war-selenium">
                                    <exclude name="**/conf/exo-jcr-config-hsql.xml" />
                                    <exclude name="**/conf/exo-jcr-config-mysql.xml" />
                                    <exclude name="**/exo-jcr-config.xml"/>
                                    <exclude name="**/exo-configuration.xml"/>
                                 </fileset>
                              </copy>
                              <copy todir="${project.build.directory}/tomcat-ide" overwrite="true">
                                 <fileset dir="${basedir}/src/main/resources/tomcat/selenium" />
                              </copy>
                                <copy file="${basedir}/src/main/resources/exo-configuration-hsql-selenium.xml" 
                              tofile="${project.build.directory}/tomcat-ide/exo-configuration.xml"/>
                              <chmod dir="${project.build.directory}/tomcat-ide/bin" perm="+x"   includes="**/*.sh"/>
                              <move todir="${project.build.directory}/tomcat-ide/lib">
                                 <fileset dir="${project.build.directory}/packager-conf/unwar/WEB-INF/lib" />
                              </move>
                              <war destfile="${project.build.directory}/tomcat-ide/webapps/IDE.war" needxmlfile="false">
                                 <fileset dir="${project.build.directory}/packager-conf/unwar" />
                              </war>
                              <war destfile="${project.build.directory}/tomcat-ide/webapps/rest.war" needxmlfile="false">
                                 <fileset dir="${basedir}/src/main/resources/rest-war" />
                              </war>

                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>                                                                                                                                                                                                
         <id>pkg</id>                                                                                                                                                                                         
         <activation>                                                                                                                                                                                          
            <activeByDefault>true</activeByDefault>                                                                                                                                                           
         </activation>                                                                                                                                                                                         
         <build>                                                                                                                                                                                               
            <plugins>                                                                                                                                                                                          
               <plugin>                                                                                                                                                                                        
                  <artifactId>maven-antrun-plugin</artifactId>                                                                                                                                                 
                  <executions>                                                                                                                                                                                 
                     <execution>                                                                                                                                                                               
                        <id>copy-war</id>                                                                                                                                                                      
                        <phase>install</phase>                                                                                                                                                                 
                        <configuration>                                                                                                                                                                        
                           <tasks>                                                                                                                                                                             
                              <copy file="${project.build.directory}/packager-conf/war/exo-ide-client-application-${project.version}.war"
                               tofile="${project.build.directory}/tomcat-ide/webapps/IDE.war" />
                              <copy todir="${project.build.directory}/tomcat-ide" overwrite="true" >                                                                                                                             
                                 <fileset dir="${basedir}/src/main/resources/tomcat/demo-site">
                                   <exclude name="**/server.xml"/>
                                 </fileset> 
                              </copy>
                              <chmod dir="${project.build.directory}/tomcat-ide/bin" perm="+x"   includes="**/*.sh"/>                                                                                                                                                                          
                           </tasks>                                                                                                                                                                            
                        </configuration>                                                                                                                                                                       
                        <goals>                                                                                                                                                                                
                           <goal>run</goal>                                                                                                                                                                    
                        </goals>                                                                                                                                                                               
                     </execution>                                                                                                                                                                              
                  </executions>                                                                                                                                                                                
               </plugin>                                                                                                                                                                                       
            </plugins>                                                                                                                                                                                         
         </build>                                                                                                                                                                                              
      </profile>         
   </profiles>
</project>
