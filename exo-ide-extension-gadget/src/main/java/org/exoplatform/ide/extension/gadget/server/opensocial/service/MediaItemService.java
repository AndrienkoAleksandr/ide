/*
 * CODENVY CONFIDENTIAL
 * __________________
 *
 * [2012] - [2013] Codenvy, S.A.
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Codenvy S.A. and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Codenvy S.A.
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Codenvy S.A..
 */
package org.exoplatform.ide.extension.gadget.server.opensocial.service;

import org.exoplatform.ide.extension.gadget.server.opensocial.model.MediaItem;

import java.util.List;

/**
 * Service is used for manipulations with media data (images, movies, and audio).
 *
 * @author <a href="mailto:zhulevaanna@gmail.com">Ann Zhuleva</a>
 * @version $Id: Nov 19, 2010 $
 */
public interface MediaItemService {
    /**
     * Retrieve MediaItems.
     *
     * @param userId
     *         person whose MediaItems are to be returned
     * @param groupId
     *         group ID of the group of users whose MediaItems are to be returned
     * @param albumId
     *         ID of the album whose MediaItems are to be returned
     * @param appId
     *         specifies that the response should only contain MediaItems generated by the given appId (optional)
     * @param ids
     *         list of MediaItem IDs specifying the MediaItems to retrieve
     * @return {@link List{@link MediaItem} mediaitem list
     */
    List<MediaItem> getMediaItems(String userId, String groupId, String albumId, String appId, List<String> ids);

    /**
     * Create an MediaItem.
     *
     * @param userId
     *         user ID of the person to associate the MediaItem with
     * @param mediaItem
     *         media item to associate with the given user
     * @return {@link MediaItem} created media item
     */
    MediaItem createMediaItem(String userId, MediaItem mediaItem);

    /**
     * Update media item.
     *
     * @param userId
     *         user ID of the person the MediaItem is associated with
     * @param mediaItem
     *         mediaItem to update
     * @return {@link MediaItem} updated media item
     */
    MediaItem updateMediaItem(String userId, MediaItem mediaItem);

    /**
     * Delete MediaItem.
     *
     * @param userId
     *         user ID of the person the MediaItem is associated with
     * @param id
     *         ID of the MediaItem to delete
     */
    void deleteMediaItem(String userId, String id);
}
