/*
 * Copyright (C) 2010 eXo Platform SAS.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.exoplatform.ide.extension.gadget.server.opensocial.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 * An OpenSocial Activity represents a short summary or notification of a timestamped event, often with pointers for more
 * information
 *
 * @author <a href="mailto:zhulevaanna@gmail.com">Ann Zhuleva</a>
 * @version $Id: Nov 19, 2010 $
 */
public class Activity {
    /** The application that this activity is associated with. */
    private String appId;

    /** An optional expanded version of an activity. */
    private String body;

    /** The body template message ID in the gadget spec. */
    private String bodyId;

    /** An optional ID generated by the posting application. */
    private String externalId;

    /** An ID that is permanently associated with this activity. */
    private String id;

    /** Any photos, videos, or images that should be associated with the activity. */
    private ArrayList<MediaItem> mediaItems;

    /** Specifying the time at which this activity took place in milliseconds since the epoch. */
    private String postedTime;

    /**
     * A number between 0 and 1 representing the relative priority of this activity in relation to other activities from the same
     * source.
     */
    private float priority;

    /** URL for the stream's favicon. */
    private String streamFaviconUrl;

    /** Stream's source URL. */
    private String streamSourceUrl;

    /** The title of the stream. */
    private String streamTitl;

    /** The stream's URL. */
    private String streamUrl;

    /** A map of custom key/value pairs associated with this activity. */
    private Map<String, Object> templateParams;

    /** The primary text of an activity. */
    private String title;

    /** URL that represents this activity. */
    private String URL;

    /** ID of the user who this activity is for. */
    private String userId;

    /** @return the appId */
    public String getAppId() {
        return appId;
    }

    /**
     * @param appId
     *         the appId to set
     */
    public void setAppId(String appId) {
        this.appId = appId;
    }

    /** @return the body */
    public String getBody() {
        return body;
    }

    /**
     * @param body
     *         the body to set
     */
    public void setBody(String body) {
        this.body = body;
    }

    /** @return the bodyId */
    public String getBodyId() {
        return bodyId;
    }

    /**
     * @param bodyId
     *         the bodyId to set
     */
    public void setBodyId(String bodyId) {
        this.bodyId = bodyId;
    }

    /** @return the externalId */
    public String getExternalId() {
        return externalId;
    }

    /**
     * @param externalId
     *         the externalId to set
     */
    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    /** @return the id */
    public String getId() {
        return id;
    }

    /**
     * @param id
     *         the id to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /** @return the mediaItems */
    public ArrayList<MediaItem> getMediaItems() {
        if (mediaItems == null) {
            mediaItems = new ArrayList<MediaItem>();
        }
        return mediaItems;
    }

    /**
     * @param mediaItems
     *         the mediaItems to set
     */
    public void setMediaItems(ArrayList<MediaItem> mediaItems) {
        this.mediaItems = mediaItems;
    }

    /** @return the postedTime */
    public String getPostedTime() {
        return postedTime;
    }

    /**
     * @param postedTime
     *         the postedTime to set
     */
    public void setPostedTime(String postedTime) {
        this.postedTime = postedTime;
    }

    /** @return the priority */
    public float getPriority() {
        return priority;
    }

    /**
     * @param priority
     *         the priority to set
     */
    public void setPriority(float priority) {
        this.priority = priority;
    }

    /** @return the streamFaviconUrl */
    public String getStreamFaviconUrl() {
        return streamFaviconUrl;
    }

    /**
     * @param streamFaviconUrl
     *         the streamFaviconUrl to set
     */
    public void setStreamFaviconUrl(String streamFaviconUrl) {
        this.streamFaviconUrl = streamFaviconUrl;
    }

    /** @return the streamSourceUrl */
    public String getStreamSourceUrl() {
        return streamSourceUrl;
    }

    /**
     * @param streamSourceUrl
     *         the streamSourceUrl to set
     */
    public void setStreamSourceUrl(String streamSourceUrl) {
        this.streamSourceUrl = streamSourceUrl;
    }

    /** @return the streamTitl */
    public String getStreamTitl() {
        return streamTitl;
    }

    /**
     * @param streamTitl
     *         the streamTitl to set
     */
    public void setStreamTitl(String streamTitl) {
        this.streamTitl = streamTitl;
    }

    /** @return the streamUrl */
    public String getStreamUrl() {
        return streamUrl;
    }

    /**
     * @param streamUrl
     *         the streamUrl to set
     */
    public void setStreamUrl(String streamUrl) {
        this.streamUrl = streamUrl;
    }

    /** @return the templateParams */
    public Map<String, Object> getTemplateParams() {
        if (templateParams == null) {
            templateParams = new HashMap<String, Object>();
        }
        return templateParams;
    }

    /**
     * @param templateParams
     *         the templateParams to set
     */
    public void setTemplateParams(Map<String, Object> templateParams) {
        this.templateParams = templateParams;
    }

    /** @return the title */
    public String getTitle() {
        return title;
    }

    /**
     * @param title
     *         the title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /** @return the uRL */
    public String getURL() {
        return URL;
    }

    /**
     * @param uRL
     *         the uRL to set
     */
    public void setURL(String uRL) {
        URL = uRL;
    }

    /** @return the userId */
    public String getUserId() {
        return userId;
    }

    /**
     * @param userId
     *         the userId to set
     */
    public void setUserId(String userId) {
        this.userId = userId;
    }
}
