<?xml version="1.0" encoding="UTF-8"?>
<!--

    CODENVY CONFIDENTIAL
    __________________

    [2012] - [2013] Codenvy, S.A.
    All Rights Reserved.

    NOTICE:  All information contained herein is, and remains
    the property of Codenvy S.A. and its suppliers,
    if any.  The intellectual and technical concepts contained
    herein are proprietary to Codenvy S.A.
    and its suppliers and may be covered by U.S. and Foreign Patents,
    patents in process, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Codenvy S.A..

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.exoplatform.ide</groupId>
        <artifactId>exo-ide-parent</artifactId>
        <version>2.4.0-SNAPSHOT</version>
    </parent>

    <artifactId>exo-ide-packaging-maven-builder</artifactId>
    <packaging>pom</packaging>
    <name>Codenvy IDE :: Assemblies Tomcat :: Maven Builder</name>
    <dependencies>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>exo-ide-maven</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-catalina-jmx-remote</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies-war</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>war</includeTypes>
                            <stripVersion>false</stripVersion>
                            <outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tomcat-catalina-jmx-remote</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>jar</includeTypes>
                            <stripVersion>false</stripVersion>
                            <outputDirectory>${project.build.directory}/tomcat-ide-builder/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-environment-ready</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>exo.projects.directory.dependencies</property>
                                    <message>You must define the property exo.projects.directory.dependencies to
                                        give the path to
                                        the directory where you store
                                        your applications servers
                                    </message>
                                </requireProperty>
                                <requireProperty>
                                    <property>tomcat.version</property>
                                    <message>You must define the property tomcat.version to give the name of the directory where is stored
                                        tomcat
                                    </message>
                                    <regex>${tomcat.version}</regex>
                                    <regexMessage>Tomcat version must be: ${tomcat.version}</regexMessage>
                                </requireProperty>
                                <requireFilesExist>
                                    <files>
                                        <file>${exo.projects.directory.dependencies}/apache-tomcat-${tomcat.version}/</file>
                                    </files>
                                    <message>The following Tomcat directory doesn't exist :
                                        ${exo.projects.directory.dependencies}/apache-tomcat-${tomcat.version}
                                    </message>
                                </requireFilesExist>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-cleare-tomcat</id>
                        <phase>process-resources</phase>
                        <configuration>
                            <tasks>
                                <copy todir="${project.build.directory}/tomcat-ide-builder">
                                    <fileset dir="${exo.projects.directory.dependencies}/apache-tomcat-${tomcat.version}/" />
                                </copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-war</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <tasks>
                                <copy file="${project.build.directory}/packager-conf/war/exo-ide-maven-${project.version}.war" tofile="${project.build.directory}/tomcat-ide-builder/webapps/builder.war" overwrite="true" />
                                <copy todir="${project.build.directory}/tomcat-ide-builder" overwrite="true">
                                    <fileset dir="${basedir}/src/main/resources/tomcat" />
                                </copy>
                                <chmod dir="${project.build.directory}/tomcat-ide-builder/bin" perm="+x" includes="**/*.sh" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <!-- Create the distribution zip and attach it to maven -->
                    <execution>
                        <id>tomcat-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <updateOnly>false</updateOnly>
                            <descriptors>
                                <descriptor>${project.basedir}/src/main/assembly/tomcat-archive.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
