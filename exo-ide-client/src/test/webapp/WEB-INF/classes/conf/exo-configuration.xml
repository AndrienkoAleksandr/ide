<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    CODENVY CONFIDENTIAL
    __________________

    [2012] - [2013] Codenvy, S.A.
    All Rights Reserved.

    NOTICE:  All information contained herein is, and remains
    the property of Codenvy S.A. and its suppliers,
    if any.  The intellectual and technical concepts contained
    herein are proprietary to Codenvy S.A.
    and its suppliers and may be covered by U.S. and Foreign Patents,
    patents in process, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Codenvy S.A..

-->
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.exoplaform.org/xml/ns/kernel_1_0.xsd http://www.exoplaform.org/xml/ns/kernel_1_0.xsd"
               xmlns="http://www.exoplaform.org/xml/ns/kernel_1_0.xsd">


    <component>
        <key>org.exoplatform.container.PropertyConfigurator</key>
        <type>org.exoplatform.container.PropertyConfigurator</type>
        <init-params>
            <value-param>
                <name>properties.url</name>
                <value>configuration.properties</value>
            </value-param>
        </init-params>
    </component>


    <component>
        <type>org.exoplatform.services.jcr.ext.app.ThreadLocalSessionProviderService
        </type>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.resource.NodeRepresentationService
        </type>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.resource.representation.NtFileNodeRepresentationFactory
        </type>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.resource.representation.NtResourceNodeRepresentationFactory
        </type>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.repository.RestRepositoryService
        </type>
    </component>


    <component>
        <type>org.exoplatform.ideall.discovery.RepositoryDiscoveryService
        </type>
    </component>


    <component>
        <key>org.exoplatform.services.jcr.config.RepositoryServiceConfiguration
        </key>
        <type>org.exoplatform.services.jcr.impl.config.RepositoryServiceConfigurationImpl
        </type>
        <init-params>
            <value-param>
                <name>conf-path</name>
                <description>JCR configuration file</description>
                <value>war:/conf/exo-jcr-config.xml</value>
            </value-param>
        </init-params>
    </component>

    <component>
        <key>org.exoplatform.services.jcr.RepositoryService</key>
        <type>org.exoplatform.services.jcr.impl.RepositoryServiceImpl</type>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.registry.RegistryService</type>
        <init-params>
            <properties-param>
                <name>locations</name>
            </properties-param>
        </init-params>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.registry.RESTRegistryService
        </type>
    </component>

    <component>
        <key>org.exoplatform.services.jcr.ext.hierarchy.NodeHierarchyCreator
        </key>
        <type>org.exoplatform.services.jcr.ext.hierarchy.impl.NodeHierarchyCreatorImpl
        </type>
    </component>

    <component>
        <type>org.exoplatform.services.organization.impl.mock.DummyOrganizationService
        </type>
    </component>


    <component>
        <type>org.exoplatform.ideall.shindig.oauth.RestSecurityTokenGenerator
        </type>
        <init-params>
            <value-param>
                <name>keyFile</name>
                <value>src/main/resources/conf/key.txt</value>
            </value-param>
        </init-params>
    </component>


    <component>
        <key>org.exoplatform.services.jcr.webdav.WebDavServiceImpl</key>
        <type>org.exoplatform.services.jcr.webdav.WebDavServiceImpl</type>
        <init-params>

            <value-param>
                <name>auto-mix-lockable</name>
                <value>false</value>
            </value-param>

            <value-param>
                <name>def-folder-node-type</name>
                <value>nt:folder</value>
            </value-param>

            <value-param>
                <name>def-file-node-type</name>
                <value>nt:file</value>
            </value-param>

            <value-param>
                <name>def-file-mimetype</name>
                <value>text/plain</value>
            </value-param>

            <value-param>
                <name>update-policy</name>
                <value>create-version</value>
            </value-param>
        </init-params>
    </component>


    <component>
        <type>org.exoplatform.services.jcr.ext.resource.jcr.Handler</type>
    </component>

    <component>
        <type>org.exoplatform.services.jcr.ext.script.groovy.GroovyScript2RestLoader
        </type>
        <init-params>
            <object-param>
                <name>observation.config</name>
                <object
                        type="org.exoplatform.services.jcr.ext.script.groovy.ObservationListenerConfiguration">
                    <field name="repository">
                        <string>repository</string>
                    </field>
                    <field name="workspaces">
                        <collection type="java.util.ArrayList">
                            <value>
                                <!--                <string>collaboration</string>-->
                                <string>dev-monit</string>
                            </value>
                        </collection>
                    </field>
                </object>
            </object-param>
        </init-params>
    </component>

    <component>
        <type>org.exoplatform.services.rest.ext.proxy.ProxyService</type>
    </component>

    <external-component-plugins>
        <target-component>org.exoplatform.services.jcr.RepositoryService
        </target-component>
        <component-plugin>
            <name>add.nodeType</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.jcr.impl.AddNodeTypePlugin</type>
            <init-params>
                <values-param>
                    <name>autoCreatedInNewRepository</name>
                    <description>Node types configuration file</description>
                    <value>war:/conf/ext-nodetypes-config.xml</value>
                    <value>war:/conf/organization-nodetypes.xml</value>
                </values-param>
            </init-params>
        </component-plugin>
        <component-plugin>
            <name>add.namespaces</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.jcr.impl.AddNamespacesPlugin</type>
            <init-params>
                <properties-param>
                    <name>namespaces</name>
                    <property name="dc"
                              value="http://purl.org/dc/elements/1.1/"/>
                    <property name="gtn"
                              value="http://www.gatein.org/jcr/gatein/1.0/"/>
                    <property name="mop"
                              value="http://www.gatein.org/jcr/mop/1.0/"/>
                    <property name="app"
                              value="http://www.gatein.org/jcr/application-registry/1.0/"/>
                    <property name="tkn"
                              value="http://www.gatein.org/jcr/token/1.0/"/>
                    <property name="wsrp"
                              value="http://www.gatein.org/jcr/wsrp/1.0/"/>
                    <property name="pc"
                              value="http://www.gatein.org/jcr/pc/1.0/"/>
                </properties-param>
            </init-params>
        </component-plugin>
    </external-component-plugins>


    <external-component-plugins>
        <target-component>org.exoplatform.services.naming.InitialContextInitializer
        </target-component>
        <component-plugin>
            <name>bind.datasource</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.naming.BindReferencePlugin</type>
            <init-params>
                <value-param>
                    <name>bind-name</name>
                    <value>jdbcjcr</value>
                </value-param>
                <value-param>
                    <name>class-name</name>
                    <value>javax.sql.DataSource</value>
                </value-param>
                <value-param>
                    <name>factory</name>
                    <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
                </value-param>
                <properties-param>
                    <name>ref-addresses</name>
                    <description>ref-addresses</description>
                    <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
                    <property name="url"
                              value="jdbc:hsqldb:file:target/temp/data/portal"/>
                    <property name="username" value="sa"/>
                    <property name="password" value=""/>
                </properties-param>
            </init-params>
        </component-plugin>
    </external-component-plugins>

    <external-component-plugins>
        <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl
        </target-component>
        <component-plugin>
            <name>ws.rs.method.filter</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.rest.impl.method.MethodInvokerFilterComponentPlugin
            </type>
            <!--
               init-params> <value-param> <name>method.access.filter</name>
               <value>org.exoplatform.services.rest.ext.method.filter.MethodAccessFilter</value>
               </value-param> </init-params
            -->
        </component-plugin>
        <component-plugin>
            <name>ws.rs.entity.provider</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.rest.impl.provider.EntityProviderComponentPlugin
            </type>
            <init-params>
                <value-param>
                    <name>ws.rest.ext.HierarchicalPropertyEntityProvider</name>
                    <value>org.exoplatform.services.rest.ext.provider.HierarchicalPropertyEntityProvider
                    </value>
                </value-param>
            </init-params>
        </component-plugin>
        <component-plugin>
            <name>ws.rs.request.filter</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.rest.impl.RequestFilterComponentPlugin
            </type>
            <init-params>
                <!--        <value-param>-->
                <!--          <name>ws.rs.request.uri-normalization-filter</name>-->
                <!--
                   <value>org.exoplatform.services.rest.ext.filter.UriNormalizationFilter</value>
                -->
                <!--        </value-param>-->
                <value-param>
                    <name>ws.rs.request.method-override-filter</name>
                    <value>org.exoplatform.services.rest.ext.filter.MethodOverrideFilter
                    </value>
                </value-param>
            </init-params>
        </component-plugin>
        <component-plugin>
            <name>ws.rs.method.filter</name>
            <set-method>addPlugin</set-method>
            <type>org.exoplatform.services.rest.impl.method.MethodInvokerFilterComponentPlugin</type>
            <init-params>
                <value-param>
                    <name>method.developer.access.filter</name>
                    <value>org.exoplatform.ide.groovy.DevelopmentResourceMethodFilter</value>
                </value-param>
            </init-params>
        </component-plugin>
    </external-component-plugins>
</configuration>
